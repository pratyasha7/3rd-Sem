// Tower of Hanoi
#include <iostream>
using namespace std;

// Function to solve the Tower of Hanoi problem
void towerOfHanoi(int n, char source, char auxiliary, char destination) {
    // Base case: if there is only one disk, move it from source to destination
    if (n == 1) {
        cout << "Move disk 1 from " << source << " to " << destination << endl;
        return;
    }

    // Step 1: Move n-1 disks from source to auxiliary using destination as a temporary rod
    towerOfHanoi(n - 1, source, destination, auxiliary);

    // Step 2: Move the nth disk from source to destination
    cout << "Move disk " << n << " from " << source << " to " << destination << endl;

    // Step 3: Move the n-1 disks from auxiliary to destination using source as a temporary rod
    towerOfHanoi(n - 1, auxiliary, source, destination);
}

int main() {
    int numDisks;

    // Input: Number of disks
    cout << "Enter the number of disks: ";
    cin >> numDisks;

    // Calling the Tower of Hanoi function
    towerOfHanoi(numDisks, 'A', 'B', 'C'); // A is the source, B is the auxiliary, C is the destination

    return 0;
}
